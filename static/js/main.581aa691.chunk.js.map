{"version":3,"sources":["components/AddField.jsx","components/Item.jsx","components/Filter.jsx","redux/actions/filter.js","App.js","redux/actions/tasks.js","redux/reducers/tasks.js","redux/reducers/filter.js","redux/index.js","index.js"],"names":["AddField","addTask","React","useState","value","setValue","isCompleted","setIsCompleted","className","Checkbox","checked","onChange","e","target","icon","checkedIcon","TextField","placeholder","variant","fullWidth","Button","onClick","Item","text","completed","removeTask","toggleCompleted","ListItem","Typography","IconButton","style","fontSize","Filter","dispatch","useDispatch","filterBy","useSelector","state","filter","filterIndex","Tabs","_","i","status","type","payload","clickTab","findIndex","Tab","label","App","useEffect","fetch","fecthRequest","ok","json","res","Paper","elevation","Divider","List","tasks","obj","map","id","window","confirm","initialState","rootReducers","combineReducers","action","length","store","createStore","applyMiddleware","thunk","next","axios","post","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.581aa691.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { TextField, Button, Checkbox } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\n\r\nexport const AddField = ({ addTask }) => {\r\n\r\n\r\n  const [value, setValue] = React.useState('')\r\n\r\n  const [isCompleted, setIsCompleted] = React.useState(false)\r\n\r\n\r\n  const handleClickBtn = () => {\r\n    addTask(value, isCompleted)\r\n\r\n    setValue('')\r\n    setIsCompleted(false)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"field\">\r\n      <Checkbox\r\n        checked={isCompleted}\r\n        onChange={e => setIsCompleted(e.target.checked)}\r\n        className=\"checkbox\"\r\n        icon={<RadioButtonUncheckedIcon />}\r\n        checkedIcon={<CheckCircleIcon />}\r\n      />\r\n      <TextField value={value} onChange={e => setValue(e.target.value)} placeholder=\"Введите текст задачи...\" variant=\"standard\" fullWidth />\r\n      <Button onClick={handleClickBtn}>\r\n        <AddIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IconButton, Checkbox, ListItem, Typography } from '@mui/material';\r\n\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\nexport const Item = ({ text, completed, removeTask, toggleCompleted }) => {\r\n  return (\r\n    <ListItem>\r\n      <div className=\"d-flex item\">\r\n        <Checkbox onChange={toggleCompleted} checked={completed} icon={<RadioButtonUncheckedIcon />} checkedIcon={<CheckCircleIcon />} />\r\n        <Typography className=\"item-text\">{text}</Typography>\r\n        <div className=\"item-buttons d-flex\">\r\n          <IconButton>\r\n            <EditIcon style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n          <IconButton onClick={removeTask}>\r\n            <DeleteOutlineIcon style={{ fontSize: 20 }} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport { Tabs, Tab } from '@mui/material';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { clickTab } from '../redux/actions/filter'\r\n\r\nexport const Filter = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const filterBy = useSelector(state => state.filter.filterBy)\r\n\r\n  const filterIndex = ['all', 'active', 'completed']\r\n\r\n  const handleClickTab = (_, i) => {\r\n    const status = filterIndex[i]\r\n\r\n    dispatch(clickTab(status))\r\n  }\r\n\r\n\r\n  return (\r\n    <Tabs onChange={handleClickTab} value={filterIndex.findIndex(i => i === filterBy)}>\r\n      <Tab label=\"Все\" />\r\n      <Tab label=\"Активные\" />\r\n      <Tab label=\"Завершённые\" />\r\n    </Tabs>\r\n  )\r\n}\r\n","export const clickTab = (status) => {\r\n  return {\r\n    type: 'SET_FILTER',\r\n    payload: status\r\n  }\r\n}","import React from 'react'\r\n\r\nimport { Paper, Divider, Button, List } from '@mui/material';\r\nimport { AddField } from './components/AddField';\r\nimport { Item } from './components/Item';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Filter } from './components/Filter';\r\n\r\nimport { addTask, removeTask, allRemove, toggleCompleted, allComplited, fetchTasks } from './redux/actions/tasks'\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const state = useSelector(state => state)\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchTasks())\r\n  }, [])\r\n\r\n\r\n  const handleClickTask = (text, completed) => {\r\n    dispatch(addTask(text, completed))\r\n  }\r\n\r\n  const handleRemoveTask = (id) => {\r\n    if (window.confirm(`Вы хотите удалить таску ${id} ?`)) {\r\n\r\n      dispatch(removeTask(id))\r\n\r\n    }\r\n  }\r\n\r\n  const handleAllRemove = () => {\r\n    dispatch(allRemove())\r\n  }\r\n\r\n  const handleToggleCompleted = (id) => {\r\n    dispatch(toggleCompleted(id))\r\n  }\r\n\r\n  const handleAllCompleted = () => {\r\n    dispatch(allComplited())\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Paper className=\"wrapper\">\r\n        <Paper className=\"header\" elevation={0}>\r\n          <h4>Список задач</h4>\r\n        </Paper>\r\n        <AddField addTask={handleClickTask} />\r\n        <Divider />\r\n\r\n        <Filter />\r\n\r\n        <Divider />\r\n        <List>\r\n\r\n          {\r\n            state.tasks.filter(obj => {\r\n\r\n              if (state.filter.filterBy === 'all') {\r\n                return true\r\n              }\r\n\r\n              if (state.filter.filterBy === 'active') {\r\n                return !obj.completed\r\n              }\r\n\r\n              if (state.filter.filterBy === 'completed') {\r\n                return obj.completed\r\n              }\r\n\r\n\r\n\r\n            }).map(obj => <Item\r\n              key={obj.id}\r\n              text={obj.text}\r\n              completed={obj.completed}\r\n              removeTask={() => handleRemoveTask(obj.id)}\r\n              toggleCompleted={() => handleToggleCompleted(obj.id)}\r\n            />\r\n            )\r\n          }\r\n\r\n\r\n        </List>\r\n        <Divider />\r\n        <div className=\"check-buttons\">\r\n          <Button onClick={handleAllCompleted}>Отметить всё</Button>\r\n          <Button onClick={handleAllRemove}>Очистить</Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const addTask = (text, completed) => {\r\n  return {\r\n    type: 'ADD_TASK',\r\n    payload: {\r\n      text,\r\n      completed\r\n    }\r\n  }\r\n}\r\n\r\nexport const removeTask = (id) => {\r\n  return {\r\n    type: 'REMOVE_TASK',\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const allRemove = () => {\r\n  return {\r\n    type: 'ALL_REMOVE'\r\n  }\r\n}\r\n\r\nexport const toggleCompleted = (id) => {\r\n  return {\r\n    type: 'TOGGLE_COMPLETED',\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const allComplited = () => {\r\n  return {\r\n    type: 'ALL_COMPLETED'\r\n  }\r\n}\r\n\r\n\r\nexport const fetchTasks = () => async (dispatch) => {\r\n  const fecthRequest = await fetch(`https://62cd07e7a43bf78008509237.mockapi.io/users`)\r\n\r\n  if (fecthRequest.ok) {\r\n    const res = await fecthRequest.json()\r\n\r\n    return dispatch({\r\n      type: 'SET_TASKS',\r\n      payload: res\r\n    })\r\n  }\r\n}","const initialState = [\r\n\r\n  {\r\n    id: 1,\r\n    text: 'Hello1',\r\n    completed: false\r\n  },\r\n  {\r\n    id: 1,\r\n    text: 'Deploy!!!!',\r\n    completed: false\r\n  },\r\n\r\n]\r\n\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n\r\n\r\n  switch (action.type) {\r\n\r\n    case 'SET_TASKS':\r\n      return action.payload\r\n\r\n    case 'ADD_TASK':\r\n      return [\r\n        ...state,\r\n\r\n        {\r\n          id: state.length + 1,\r\n          text: action.payload.text,\r\n          completed: action.payload.completed\r\n        }\r\n\r\n      ]\r\n\r\n    case 'REMOVE_TASK':\r\n      return state.filter(obj => obj.id !== action.payload)\r\n\r\n\r\n    case 'ALL_REMOVE':\r\n      return []\r\n\r\n    case 'TOGGLE_COMPLETED':\r\n      return state.map(obj => {\r\n        if (obj.id === action.payload) {\r\n\r\n          return {\r\n            ...obj,\r\n            completed: !obj.completed\r\n          }\r\n\r\n        }\r\n        return obj\r\n      })\r\n\r\n\r\n    case 'ALL_COMPLETED':\r\n      return state.map(obj => {\r\n        return {\r\n          ...obj,\r\n          completed: true\r\n        }\r\n      })\r\n\r\n\r\n    default:\r\n      return state\r\n  }\r\n\r\n}","const initialState = {\r\n  filterBy: 'all'\r\n}\r\n\r\n\r\n\r\n\r\nexport const filterReducer = (state = initialState, action) => {\r\n\r\n  if (action.type === 'SET_FILTER') {\r\n    return {\r\n      ...state,\r\n      filterBy: action.payload\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport { tasksReducer } from './reducers/tasks'\r\nimport { filterReducer } from './reducers/filter'\r\n\r\nimport axios from 'axios'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducers = combineReducers({\r\n\r\n  tasks: tasksReducer,\r\n  filter: filterReducer\r\n\r\n})\r\n\r\n\r\nconst log = (store) => (next) => (action) => {\r\n\r\n  if (action.type === 'ADD_TASK') {\r\n    axios.post(`https://62cd07e7a43bf78008509237.mockapi.io/users`, action.payload)\r\n\r\n    setTimeout(() => {\r\n      next(action)\r\n    }, 2000)\r\n    return\r\n  }\r\n\r\n  return next(action)\r\n}\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk, log))\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.scss';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}